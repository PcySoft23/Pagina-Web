// Código Java para barajar una baraja de cartas 
import java.util.Random; 
  
class JVC { 
      
    // Función que baraja e imprime el array
    public static void shuffle(int card[], int n) 
    { 
          
        Random rand = new Random(); 
          
        for (int i = 0; i < n; i++) 
        { 
            // Random for remaining positions. 
            int r = i + rand.nextInt(52 - i); 
              
             //swapping the elements 
             int temp = card; 
             card = card; 
             card = temp; 
               
        } 
    } 
       
    // Código del controlador 
    public static void main(String[] args)  
    { 
        // Array from 0 to 51 
        int a[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 
                   9, 10, 11, 12, 13, 14, 15, 
                   16, 17, 18, 19, 20, 21, 22, 
                   23, 24, 25, 26, 27, 28, 29, 
                   30, 31, 32, 33, 34, 35, 36, 
                   37, 38, 39, 40, 41, 42, 43, 
                   44, 45, 46, 47, 48, 49, 50,  
                   51}; 
       
        shuffle(a, 52); 
       
        // Imprimir todos los elementos barajados de las cartas 
        for (int i = 0; i < 52; i ++) 
           System.out.print(a+" "); 
          
    } 
} 
// This code is contributed by Arnav Kr. Mandal

/*Importo las dos librerias que uso
Scanner para introducir datos desde el teclado
Random para los numeros aleatorios*/
import java.util.Scanner;
import java.util.Random;
//Creo la clase cola para almacenar la baraja
class cola {
	//Creo la clase Nodo para que la cola 
	//sea de almacenanimiento dinamico
	class Nodo{
		//Variable entera que almacena el numero de la carta
		int dato;
		//Nodo que relaciona con el nodo siguiente
		Nodo sgn;
	}
	//Creo los dos nodos que usare durante para
	//la interaccion con la cola
	Nodo raiz, fondo;
	//Constructor de la cola para asignar valores nulos
	//a la raiz y al fondo
	cola(){
		raiz = null;
		fondo = null;
	}
	//Funcion de tipo boolean para saber si la cola
	//esta tiene algo o se encuentrea vasia
	boolean vasia(){
		if (raiz == null)
			return true;
		else
			return false;
	}
	//Funcion para agregar un elemento a la cola
	//el elemento nuevo es enviado por parametro de la cola
	//es de tipo entero
	void agregar(int x){
		//Nodo auxiliar para poder interactuar con la cola
		Nodo nuevo;
		nuevo = new Nodo();
		//asigno el valor enviado a el valor que alamacena el nodo
		nuevo.dato = x;
		//Le asigno el valor de nulo al nodo siguiente ya
		//que posterior mente se convertira en el ultimo
		//nodo en ser arreglado.
		nuevo.sgn = null;
		//Verifico que la cola no esta vacia
		if (vasia()) {
			//En caso de que la cola este vacia apunto a la raiz
			//y al fondo hacia el mismo nodo.
			raiz = nuevo;
			fondo = nuevo;
		}else{
			//En caso de que no este vacia la cola apunto el nodo
			//fondo en siguiente al nodo nuevo para poder unirlo
			//a la cola y luego apunto el fondo al nodo nuevo
			fondo.sgn = nuevo;
			fondo = nuevo;
		}
	}
	int mostrar(){
		//Creo una variable que le asigno el valor del nodo raiz
		int info = raiz.dato;
		//Verifico que el raiz apunte al mismo nodo que fondo
		if (raiz == fondo) {
			//En caso de que raiz apunte al mismo nodo que fondo
			//le afigno los valores de null a raiz y a fondo
			//para vaciar la cola.
			raiz = null;
			fondo = null;
		}else{
			//En caso de que raiz no apunte al mismo nodo que fondo
			//hago que raiz apunte al nodo siguiente del cual el apunta.
			raiz = raiz.sgn;
		}
		//Retorno el valor que se encuantra en la variable info.
		return info;
	}
}
/*Creo la clase juego en la cual se encuentran las funciones 
para el hacer los distintos procesos que necesita el juego para
funcionar.*/
class juego {
	//Variable en la cual esta el numero de jugadores de esta partida.
	int jugadores=0;
	//Arreglo bidimencional que funge como mano de los jugadores
	//el primer campo hace referencia al jugador y el segundo a
	//las cartas que tenga en su mano dicho jugador.
	int mano[][] = new int[4][6];
	//Arreglo que hace referencia a la carta que tendra libre el jugador 
	//o la carta que se usara para poder hacer el cambio de cartas.
	int cartaLibre[][] = new int[4][1];
	//Arreglo que verifica que todos las cartas sean pares
	//En caso de que alguna carta no sea par le asigna a la
	//posicion el valor de falso.
	boolean mano2[] = new boolean[6];
	//Variable que lleva el control del juego.
	//Esta variable es nusada para hacer el ciclo de repeticion 
	//mientras ningun jugador gane.
	boolean ganador = false;
	//Se crea una cola que servira como el maso de las cartas que
	//no esten en las manos de los jugadores
	cola maso = new cola();
	//Funcion que agrega las cartas al maso.
	//Usa un random para no llevar un orden.
	void barajear(){
		//Creo el objeto random
		Random rand = new Random();
		//Un arreblo del tamaño de las cartas que hay en un juego.
		//Es de valor booleano ya que si la carta ya fue agregada
		//al maso se agrega el valor false para no repetir dicha carta.
		boolean arr[] = new boolean[52];
		//Variable que es usada para almacenar el numero random
		int num;
		//Variable que lleva el contador de cuantas cartas han sido agregadas
		//al llegar a 52 hacer que se termine el ciclo de repeticion
		//ya que se considera que todas las cartas han sido agregadas
		int con=0;
		//For que es usado para asginar a todas las cartas en la
		//varaja el valor de true que indica que esta disponible 
		//para ser agregado al maso.
		for (int i=0;i<52 ;arr[i++] = true);
		//Ciclo de repeticion el cualterminara cuando el valor
		//del contador sea igual a 52.
		while (con != 52) {
			//Se el asigna a num el valor de un numero
			//aleatorio de entre 0 y 51
			num = rand.nextInt(52);
			//Verifico que dicha carta no haya sido agregada con
			//anterioridad al maso.
			if (arr[num]){
				//En caso de no ser agregada anterior mente
				//Le asigno el valor de false para no volver
				//a ser agregada
				arr[num] = false;
				//agrego al maso el valor del numero asignado mas 1
				maso.agregar(num+1);
				//Incremento en 1 el valor del contador
				con++;
			}
		}
	}
	//Funcion que asigna el numero de jugadores al la variable jugadores
	void jugadoreshay(int x){jugadores = x;}
	//Funcion que da las primeras 5 cartas a los jugadores
	void darcartas(){
		//For que es usado para poder recorrer a todos los jugadores
		//de la partida
		for (int i = 0;i < jugadores; i++ ) {
			//For que es usado para poder recorres las primeras 5 cartas
			//de la mano de cada jugador
			for (int j = 0;j <5 ; j++ ) {
				//Le agrego a la mano del jugador las cartas que son extraidas
				//del maso en el orden que fueron agregadas.
				mano[i][j] = maso.mostrar();
			}
			//Asigno a cada jugador la posicion de la carta que hace falta
			cartaLibre[i][0]=5;
		}
	}
	//Variable que retorna el estado de la partida ya que si hay un ganador el juego tiene que terminar
	boolean hayGanador(){return ganador;}
	//Funcion para asignar una carta a la mano del jugador
	//en la posicion donde se encuentre con una carta libre.
	void darCarta(int jugador){
		mano[jugador][cartaLibre[jugador][0]] = maso.mostrar();
	}
	//Funcion para mostrar el tipo y el valor de la carta
	void carta(int x){
		//Variables que son usadas para llevar el control
		//del tipo de carta (Palmas, Diamantes, Trevoles, Corazones)
		//y el valor de dicha carta (As,2,3,4,5,6,7,8,9,10,Joto,Quena,Rey)
		int tipo;
		int valor;
		/*Divido la carta entre 13 (13 es el numero total de cartas que hay en cada palo)
		para poder sacar que tipo es (0,1,2,3 de hay son asignado lo de palmas, corazones, etc)*/
		tipo = x/13;
		/*Saco lo que resta de la divicion de el valor de la carta entre 13
		de esa forma se el valor de la carta que ocupa en dicho palo*/
		valor = x%13;
		//En caso de que el valor de valor sea igual a 0 (Que es el caso en el cual los reyes caen)
		if (valor == 0) {
			//le resto 1 a tipo para optener su valor real en el juego
			tipo--;
			//Le asigno el valor de 13 a valor
			valor = 13;
		}
		/*Uso un switch para imprimir el tipo de palo al que pertenece cada carta*/
		switch (tipo) {
			case 0:
				System.out.print("Palmas");
			break;
			case 1:
				System.out.print("Diamantes");
			break;
			case 2:
				System.out.print("Trevoles");
			break;
			case 3:
				System.out.print("Corazones");
			break;
		}
		//Imprimo 3 guines medios solo para marcar una separacion entre el valor de la carta y el tipo
		System.out.print("---");
		//Uso un switch para poder imprimir el valor correspondiente a la carta
		switch (valor) {
			case 1:
				System.out.println("As");
			break;
			case 11:
				System.out.println("Joto");
			break;
			case 12:
				System.out.println("Quena");
			break;
			case 13:
				System.out.println("Rey");
			break;
			default:
				System.out.println(valor);
			break;
		}
	}
	//Funcion que es usada para imprimir la mano del jugaro
	void mostrarMano(int jugador){
		//Recorro todas las posiciones de la mano del jugador
		for (int i = 0;i < 6 ; i++ ) {
			//Imprimo el valor de la posicion y un guin para
			//hacer una pequeña separacion.
			System.out.print((i+1)+"-");
			//llamo a la funcion que me imprime el valor de la carta
			this.carta(mano[jugador][i]);
		}
	}
	//Funcion que verifica que el jugador haya ganado
	boolean gano(int jugador){
		//For que le asigna a mano2 el valor de false
		for (int i=0;i<6 ;mano2[i++]= false );
		//For que visita todas las cartas del jugador
		for (int i = 0;i<6 ;i++ )
			//For va a comparar las cartas
			for (int j=0;j<6 ;j++ )
				//Valido que no este comparando la misma carta
				if (i != j) 
					//Saco el modulo de las dos cartas y los comparo
					if((mano[jugador][i]%13) == (mano[jugador][j]%13))
						//Si son iguales indico que dicha posicion si tiene un par
						mano2[i] = true;
		//Nueva mente visito el valor de todas las cartas en la mano del jugaro
		for (int i=0;i<6 ;i++ ) {
			//valido que sea par
			if (!mano2[i]) {
				//en caso de no ser par retorno como valor false
				//que indica que el jugador aun no gana
				return false;
			}
		}
		//En caso de que todas las cartas tengan un par
		//retorno el valor de true lo cual indica que
		//el jugaro gano
		return true;
	}
	//Funcion que es usada para quitar una carta de
	//la mano del jugaro y volverla a agregar al maso.
	//Esta funcion recive como parametros el jugaro
	//que va a quitar la carta y la posicion de dicha carta
	void quitarCarta(int jugador, int posicion){
		//Indico que la carta libre esta en la posicion que le envio
		cartaLibre[jugador][0]= posicion-1;
		//Agrego el valor de dicha posicion de la mano del jugador
		//al maso para que vuleva a estar en juego la carta
		maso.agregar(mano[jugador][posicion-1]);
	}
	//Funcion main :D
	public static void main(String[] args) {
		//Creo las variables y objetos que necesitare para llevar el control del juego
		//op es usada para asignarle valores por teclado
		int op=0;
		//Turno es usado para llevar el control de que jugar esta al mando por el momento
		int truno = 0;
		//Creo el objeto para poder asignar los valores atravez del teclado
		Scanner in = new Scanner(System.in);
		//Creo el objeto de tipo juego.
		juego p = new juego();
		//Barajeo el maso de cartas
		p.barajear();
		//Pregunto cuantos jugadores habra en la partida.
		//si el valor es menor o igual a 1 vulevo a preguntar
		//si es mayo a 4 vuelvo a preguntar
		while(op <=1 || op >4){
			System.out.print("Cuantas personas jugaran (2-4)\n---->");
			op = in.nextInt();			
		}
		//Indico cuantos jugadores hay en el juego
		p.jugadoreshay(op);
		//Les entrego sus cartas a los jugadores
		p.darcartas();
		//Verifico que no hay gandor aun para poder repetir las veces que sean necesarias los turnos
		while(!p.hayGanador()){
			//Le asigno a turno el valor de 0 lo cual indica que el primer jugar es el que va a iniciar
			truno = 0;
			//Repito los turnos por cada jugar que hay en el jugo
			while(truno < p.jugadores){
				//Indico con una imprecion en pantalla de quien es el turno
				System.out.println("\n\n\t::Turno del jugar  "+(truno+1)+"::\n\n");
				//Le entrego una carta al jugador
				p.darCarta(truno);
				//Le muestro su mano al jugador
				p.mostrarMano(truno);
				//Verifico que el jugaro haya ganado con los valores de sus cartas
				if (p.gano(truno)) {
					//En caso de que el jugador gane lo muestro en pantalla
					System.out.println("\t::::::::::::::::::\n\tEl jugador "+(truno+1)+" gano.\n\t::::::::::::::::::");
					//Termino el juego
					System.exit(0);
				}else{
					//En caso que no haya ganado el jugado
					//a op le asigno el valor de 0 para que se tenga que repetir el ciclo
					op=0;
					//Le pregunto al jugador que carta quiere quitar de su mano
					//Si el valor dado por el jugado es menor o igual a 0 o mayor
					//a 6 le vuelvo a pregunta.
					while(op <= 0 || op > 6){
						System.out.print("Cual carta quieres quitar--->");
						op = in.nextInt();
					}
					//Llamo a la funcion quitar carta y le paso como parametros
					//los valores del jugador que tiene el mando y la posicion 
					//De la carta que quiere quitar
					p.quitarCarta(truno,op);
				}
				//Incremento en 1 el turno para que siga el jugador siguiente.
				truno ++;
			}
		}
	}
}
